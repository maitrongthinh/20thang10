// Global variables for Firebase auth (not strictly used for this simple app, but good practice to include)
const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';
const firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : {};

// --- Audio Management (S·ª≠ d·ª•ng Audio c∆° b·∫£n) ---
let softPianoAudio = null;
let doorOpenAudio = null;

/**
 * Initializes and loads audio files.
 * Uses localStorage to persist music playback state across pages.
 */
function initAudio() {
    // T·∫£i nh·∫°c n·ªÅn piano (S·ª≠ d·ª•ng URL gi·∫£ ƒë·ªãnh - C·∫¶N THAY TH·∫æ)
    softPianoAudio = new Audio('assets/soft-piano.mp3'); 
    softPianoAudio.loop = true;
    softPianoAudio.volume = 0.5; // √Çm l∆∞·ª£ng √™m d·ªãu

    // T·∫£i √¢m thanh c·ª≠a m·ªü (S·ª≠ d·ª•ng URL gi·∫£ ƒë·ªãnh - C·∫¶N THAY TH·∫æ)
    doorOpenAudio = new Audio('assets/door-open.mp3');
    doorOpenAudio.volume = 0.7;

    // Ki·ªÉm tra n·∫øu nh·∫°c ƒë√£ ƒë∆∞·ª£c b·∫≠t (ng∆∞·ªùi d√πng ƒë√£ nh·∫•n M·ªü Qu√†)
    if (localStorage.getItem('musicStarted') === 'true') {
        playSoftPiano();
    }
}

/**
 * C·ªë g·∫Øng ph√°t nh·∫°c n·ªÅn.
 * S·∫Ω th·∫•t b·∫°i n·∫øu tr√¨nh duy·ªát ch·∫∑n autoplay, c·∫ßn t∆∞∆°ng t√°c ng∆∞·ªùi d√πng.
 */
function playSoftPiano() {
    if (softPianoAudio && softPianoAudio.paused) {
        softPianoAudio.play().catch(e => {
            console.log("Autoplay b·ªã ch·∫∑n. C·∫ßn t∆∞∆°ng t√°c ng∆∞·ªùi d√πng.");
            // X·ª≠ l√Ω th·∫•t b·∫°i (v√≠ d·ª•: hi·ªÉn th·ªã th√¥ng b√°o)
        });
    }
}

/**
 * H√†m chuy·ªÉn trang m∆∞·ª£t m√†
 * @param {string} pageUrl - URL c·ªßa trang ti·∫øp theo
 */
function navigate(pageUrl) {
    const body = document.body;
    body.classList.add('fade-out');

    // Chuy·ªÉn trang sau khi hi·ªáu ·ª©ng fade-out ho√†n t·∫•t
    setTimeout(() => {
        window.location.href = pageUrl;
    }, 500); 
}

// --- Logic Trang B√≥ Hoa (flower.html) ---

/**
 * Hi·ªÉn th·ªã tin nh·∫Øn ch√∫c m·ª´ng 20/10 sau khi animation hoa ho√†n t·∫•t.
 */
function setupFlowerPage() {
    const flowerMessage = document.getElementById('flower-message');
    const continueButtonFlower = document.getElementById('continue-button-flower');
    
    // N·ªôi dung tin nh·∫Øn cu·ªëi c√πng, d√†nh ri√™ng cho c√°c b·∫°n n·ªØ 9A
    const finalMessage = "Ch√∫c c√°c thi√™n th·∫ßn 9A m√£i r·∫°ng r·ª° v√† th√†nh c√¥ng tr√™n con ƒë∆∞·ªùng h·ªçc t·∫≠p! M√£i l√† nh·ªØng b√¥ng hoa t∆∞∆°i ƒë·∫πp nh·∫•t c·ªßa l·ªõp nh√©! ‚ù§Ô∏è"; 

    // ƒê·∫∑t n·ªôi dung
    flowerMessage.innerHTML = finalMessage;

    // Sau 5 gi√¢y (th·ªùi gian animation hoa ch·∫°y), hi·ªÉn th·ªã tin nh·∫Øn v√† n√∫t
    setTimeout(() => {
        flowerMessage.classList.add('visible');
    }, 5000); // 5 gi√¢y cho hoa n·ªü

    // Sau 7 gi√¢y, hi·ªÉn th·ªã n√∫t ti·∫øp t·ª•c
    setTimeout(() => {
        continueButtonFlower.classList.add('visible');
    }, 7000);

    // G·∫Øn s·ª± ki·ªán chuy·ªÉn trang cho n√∫t Ti·∫øp t·ª•c
    if (continueButtonFlower) {
        continueButtonFlower.onclick = () => {
            navigate('door.html');
        };
    }
}


// --- Logic Trang C√°nh C·ª≠a (door.html) ---

const countdownElement = document.getElementById('door-message');
const doorButton = document.getElementById('door-button');
const doorWrapper = document.querySelector('.door-wrapper');
let isDoorOpen = false;


/**
 * Logic m·ªü c·ª≠a v√† hi·ªÉn th·ªã th√¥ng b√°o cu·ªëi c√πng
 */
function openDoor() {
    if (isDoorOpen) return;
    isDoorOpen = true;

    // Ph√°t √¢m thanh m·ªü c·ª≠a
    if (doorOpenAudio) {
        doorOpenAudio.currentTime = 0;
        doorOpenAudio.play();
    }

    // M·ªü c·ª≠a
    doorWrapper.classList.add('open');

    // T·∫Øt nh·∫°c n·ªÅn
    if (softPianoAudio) {
        softPianoAudio.pause();
        const audioControl = document.getElementById('audio-control');
        if (audioControl) {
            audioControl.innerHTML = 'üîá';
            audioControl.classList.add('paused');
            localStorage.setItem('musicStarted', 'false');
        }
    }

    // Sau khi c·ª≠a m·ªü, hi·ªÉn th·ªã th√¥ng b√°o cu·ªëi c√πng
    setTimeout(() => {
        const finalMessage = "H·∫øt b·∫•t ng·ªù r·ªìi! Nh∆∞ng t√¨nh b·∫°n 9A l√† m√£i m√£i! Ch√∫c 20/10 vui v·∫ª! üéâ";
        const messageElement = document.getElementById('door-message');
        
        if (messageElement) {
            messageElement.style.color = 'var(--color-pink)'; // ƒê·ªïi m√†u th√¥ng b√°o
            messageElement.innerHTML = finalMessage;
            messageElement.classList.add('visible');
        }
        
        // T·∫°o m∆∞a confetti
        startConfetti();
        
        // V√¥ hi·ªáu h√≥a click sau khi m·ªü
        if (doorButton) doorButton.style.pointerEvents = 'none';

    }, 1500); // Sau 1.5s (th·ªùi gian animation c·ª≠a m·ªü)
}

// --- Logic Confetti (Ruy bƒÉng gi·∫•y) ---
function createConfettiPiece() {
    const piece = document.createElement('div');
    piece.classList.add('confetti');
    piece.style.left = Math.random() * 100 + 'vw';
    piece.style.backgroundColor = ['var(--color-pink)', 'var(--color-purple)', 'var(--color-white)'][Math.floor(Math.random() * 3)];
    piece.style.animationDelay = Math.random() * 5 + 's';
    piece.style.animationDuration = Math.random() * 3 + 4 + 's';
    piece.style.opacity = '1';
    return piece;
}

function startConfetti() {
    const container = document.getElementById('confetti-container');
    if (!container) return;
    
    container.style.display = 'block';
    
    for (let i = 0; i < 50; i++) {
        container.appendChild(createConfettiPiece());
    }
}


// --- H√†m kh·ªüi t·∫°o ch√≠nh ---
document.addEventListener('DOMContentLoaded', () => {
    initAudio(); // Kh·ªüi t·∫°o √¢m thanh v√† ki·ªÉm tra tr·∫°ng th√°i nh·∫°c n·ªÅn

    if (document.body.id === 'letter-page') {
        // H√†m ƒë√°nh m√°y th∆∞ ƒë∆∞·ª£c g·ªçi trong script c·ªßa letter.html
        // Kh√¥ng c·∫ßn g·ªçi typeLetter() ·ªü ƒë√¢y
    }
    
    if (document.body.id === 'flower-page') {
        setupFlowerPage(); // B·∫Øt ƒë·∫ßu timer ƒë·ªÉ hi·ªÉn th·ªã th√¥ng b√°o
    }

    if (document.body.id === 'door-page') {
        const doorButton = document.getElementById('door-button');
        
        // G·∫Øn s·ª± ki·ªán cho C√°nh C·ª≠a
        if (doorButton) doorButton.onclick = openDoor; 
    }
    
    // Th√™m m·ªôt ph·∫ßn t·ª≠ ƒëi·ªÅu khi·ªÉn √¢m thanh (cho ph√©p ng∆∞·ªùi d√πng t·ª± b·∫≠t/t·∫Øt nh·∫°c)
    if (!document.getElementById('audio-control')) {
        const audioControl = document.createElement('div');
        audioControl.id = 'audio-control';
        audioControl.innerHTML = localStorage.getItem('musicStarted') === 'true' ? 'üîä' : 'üîá';
        if (localStorage.getItem('musicStarted') !== 'true') audioControl.classList.add('paused');
        
        audioControl.title = 'B·∫≠t/T·∫Øt Nh·∫°c N·ªÅn';
        audioControl.onclick = () => {
            if (softPianoAudio) {
                if (softPianoAudio.paused) {
                    playSoftPiano();
                    audioControl.innerHTML = 'üîä';
                    audioControl.classList.remove('paused');
                    localStorage.setItem('musicStarted', 'true');
                } else {
                    softPianoAudio.pause();
                    audioControl.innerHTML = 'üîá';
                    audioControl.classList.add('paused');
                    localStorage.setItem('musicStarted', 'false');
                }
            }
        };
        document.body.appendChild(audioControl);
    }
});
